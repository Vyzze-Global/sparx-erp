# Generated by Django 5.0.6 on 2025-06-18 03:35

import apps.orders.models
import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('pos', '0001_initial'),
        ('products', '0001_initial'),
        ('systemconfig', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.JSONField(blank=True, default=dict, null=True)),
                ('type', models.CharField(choices=[('fixed', 'Fixed'), ('percentage', 'Percentage')], max_length=50)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('minimum_cart_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('max_uses', models.PositiveIntegerField(blank=True, null=True)),
                ('used_count', models.PositiveIntegerField(default=0)),
                ('active_from', models.DateTimeField()),
                ('expire_at', models.DateTimeField()),
                ('is_valid', models.BooleanField(default=True)),
                ('target', models.PositiveIntegerField(blank=True, null=True)),
                ('is_approve', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('order_number', models.IntegerField(null=True, unique=True)),
                ('customer_contact', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+94719999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('delivery_time', models.CharField(blank=True, max_length=50, null=True)),
                ('use_wallet_points', models.BooleanField(blank=True, default=False, null=True)),
                ('order_status', models.CharField(blank=True, choices=[('draft', 'Draft'), ('request', 'Request'), ('quote', 'Quote'), ('pending', 'Pending'), ('processing', 'Processing'), ('out_for_delivery', 'Out for Delivery'), ('delivered', 'Delivered'), ('completed', 'Completed'), ('on_hold', 'On Hold'), ('partially_refunded', 'Partially Refunded'), ('refunded', 'Refunded'), ('cancelled', 'Cancelled')], default='Request', max_length=100, null=True)),
                ('payment_status', models.CharField(blank=True, choices=[('cash', 'Cash'), ('card_payment', 'Card Payment'), ('online_payment', 'Online Payment'), ('cheque', 'Cheque'), ('cash_on_delivery', 'Cash on Delivery'), ('bank_transfer', 'Bank Transfer')], max_length=100, null=True)),
                ('order_type', models.CharField(choices=[('store', 'Store'), ('online', 'Online')], default='None', max_length=100)),
                ('collection_method', models.CharField(blank=True, choices=[('in_store', 'In Store'), ('store_pickup', 'Store Pickup'), ('delivery', 'Delivery')], default='None', max_length=100, null=True)),
                ('note', models.CharField(blank=True, max_length=150, null=True)),
                ('remarks', models.CharField(blank=True, max_length=150, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('delivery_fee', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('coupon_discount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('return_voucher_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('percentage_discount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('percentage_discount_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('flat_discount_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('total_discount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('return_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('total', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('paid_total', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('cash_register', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pos.cashregister')),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='orders.coupon')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.customerprofile')),
                ('sales_advisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.employeeprofile')),
            ],
        ),
        migrations.CreateModel(
            name='OrderAddress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('zip', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('street_address', models.CharField(blank=True, max_length=100, null=True)),
                ('delivery_contact', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+94719999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('delivery_note', models.CharField(blank=True, max_length=200, null=True)),
                ('delivery_time', models.CharField(blank=True, max_length=100, null=True)),
                ('delivery_date', models.DateField(blank=True, null=True)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_addresses', to='orders.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderDispatch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('type', models.CharField(choices=[('SELF_DELIVERY', 'SELF_DELIVERY'), ('DELIVERY_PARTNER', 'DELIVERY_PARTNER')], max_length=50)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('contact', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+94719999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('tracking_number', models.CharField(blank=True, max_length=200, null=True)),
                ('tracking_link', models.CharField(blank=True, max_length=200, null=True)),
                ('notes', models.CharField(blank=True, max_length=200, null=True)),
                ('deliver_partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='systemconfig.deliverypartner')),
                ('order', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.order')),
                ('self_deliver_partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='systemconfig.selfdeliverypartner')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('batch_number', models.CharField(blank=True, max_length=50, null=True)),
                ('item_name', models.CharField(blank=True, max_length=200, null=True)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('percentage_discount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('sale_price_discount_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('percentage_discount_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('flat_discount_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('line_discount_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('quantity', models.IntegerField(blank=True, default=1)),
                ('return_quantity', models.IntegerField(default=0)),
                ('item_value', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('item_total', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.batch')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='orders.order')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.product')),
                ('product_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='products.productvariation')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='OrderNote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('note', models.CharField(blank=True, max_length=200, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.order')),
            ],
        ),
        migrations.CreateModel(
            name='OrderReturn',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('return_number', models.IntegerField(null=True, unique=True)),
                ('return_status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('completed', 'Completed')], default='pending', max_length=50)),
                ('refund_method', models.CharField(choices=[('add_to_wallet', 'Add to Wallet'), ('return_voucher', 'Return Voucher')], default='return_voucher', max_length=50)),
                ('reason', models.TextField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.customerprofile')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.order')),
            ],
            options={
                'ordering': ['-return_number'],
            },
        ),
        migrations.CreateModel(
            name='OrderReturnItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('return_quantity', models.IntegerField(default=1)),
                ('refund_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('processed', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('restocked', 'Restocked'), ('returned_to_supplier', 'Returned to Supplier'), ('damaged_discarded', 'Damaged and Discarded'), ('refunded', 'Refunded'), ('replacement_issued', 'Replacement Issued'), ('not_approved', 'Not Approved'), ('partial_refund', 'Partial Refund')], default='pending', max_length=32)),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.orderitem')),
                ('order_return', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='return_order_items', to='orders.orderreturn')),
            ],
        ),
        migrations.CreateModel(
            name='ReturnNote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('return_number', models.IntegerField(null=True, unique=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('reason', models.CharField(blank=True, max_length=150, null=True)),
                ('payment_method', models.CharField(blank=True, choices=[('CASH', 'CASH'), ('IPG_REFUND', 'IPG_REFUND'), ('ONLINE_PAYMENT', 'ONLINE_PAYMENT'), ('BANK_TRANSFER', 'BANK_TRANSFER')], max_length=100, null=True)),
                ('transaction_reference', models.CharField(blank=True, max_length=20, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='orders.order')),
            ],
        ),
        migrations.CreateModel(
            name='ReturnVoucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_id', models.CharField(default=apps.orders.models.generate_short_id, editable=False, max_length=8, unique=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('mobile', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+94719999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('active', 'Active'), ('redeemed', 'Redeemed'), ('expired', 'Expired')], default='active', max_length=20)),
                ('issued_at', models.DateTimeField(auto_now_add=True)),
                ('expiry_date', models.DateTimeField(blank=True, null=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.customerprofile')),
                ('order_return', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.orderreturn')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='return_voucher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.returnvoucher'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('rating', models.IntegerField()),
                ('photos', models.JSONField(blank=True, default=list, null=True)),
                ('positive_feedbacks_count', models.IntegerField(default=0)),
                ('negative_feedbacks_count', models.IntegerField(default=0)),
                ('abusive_reports_count', models.IntegerField(default=0)),
                ('my_feedback', models.BooleanField(null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.customerprofile')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('product_variant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='products.productvariation')),
            ],
        ),
    ]
