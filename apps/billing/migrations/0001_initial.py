# Generated by Django 5.0.6 on 2025-06-18 03:35

import apps.billing.models
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('orders', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('short_id', models.CharField(default=apps.billing.models.generate_short_id, editable=False, max_length=8, unique=True)),
                ('invoice_number', models.IntegerField(null=True, unique=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pro-forma', 'Pro-Forma'), ('invoice', 'Invoice'), ('unpaid', 'Unpaid'), ('paid', 'Paid'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('payment_pending', 'Payment Pending')], default='Draft', max_length=100)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('card_payment', 'Card Payment'), ('online_payment', 'Online Payment'), ('cheque', 'Cheque'), ('cash_on_delivery', 'Cash On Delivery'), ('bank_transfer', 'Bank Transfer')], default='Cash', max_length=100)),
                ('issued_at', models.DateField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10)),
                ('paid', models.BooleanField(default=False)),
                ('pay_url', models.URLField(blank=True, null=True)),
                ('pay_url_expiry', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('remarks', models.CharField(blank=True, max_length=150, null=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.customerprofile')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='orders.order')),
            ],
            options={
                'ordering': ['-invoice_number'],
            },
        ),
        migrations.CreateModel(
            name='InvoicePayment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('change_given', models.DecimalField(decimal_places=2, default=0, max_digits=10, null=True)),
                ('add_to_wallet_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, null=True)),
                ('tendered_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, null=True)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('cash_on_delivery', 'Cash on Delivery'), ('card', 'Card'), ('online_payment', 'Online Payment'), ('cheque', 'Cheque'), ('bank_transfer', 'Bank Transfer'), ('qr_payment', 'QR Payment'), ('wallet_payment', 'Wallet Payment'), ('loyalty_payment', 'Loyalty Payment')], default='Cash', max_length=100)),
                ('card_type', models.CharField(blank=True, max_length=100, null=True)),
                ('card_last_digits', models.IntegerField(blank=True, null=True)),
                ('transaction_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoice_payments', to='billing.invoice')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
